import { Component } from 'react';
import type { ErrorInfo, ReactNode } from 'react';

interface Props {
	children: ReactNode;
	fallback?: ReactNode;
}

interface State {
	hasError: boolean;
	error?: Error;
	errorInfo?: ErrorInfo;
}

class ErrorBoundary extends Component<Props, State> {
	constructor(props: Props) {
		super(props);
		this.state = { hasError: false };
	}

	static getDerivedStateFromError(error: Error): State {
		// –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —á—Ç–æ–±—ã —Å–ª–µ–¥—É—é—â–∏–π —Ä–µ–Ω–¥–µ—Ä –ø–æ–∫–∞–∑–∞–ª fallback UI
		return { hasError: true, error };
	}

	componentDidCatch(error: Error, errorInfo: ErrorInfo) {
		// –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
		console.error('Error Boundary –ø–µ—Ä–µ—Ö–≤–∞—Ç–∏–ª –æ—à–∏–±–∫—É:', error, errorInfo);

		this.setState({
			error,
			errorInfo,
		});

		// –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—à–∏–±–∫—É –≤ —Å–µ—Ä–≤–∏—Å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
		// –Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ Sentry, LogRocket –∏ —Ç.–¥.
	}

	private handleReload = () => {
		window.location.reload();
	};

	private handleReset = () => {
		this.setState({ hasError: false, error: undefined, errorInfo: undefined });
	};

	render() {
		if (this.state.hasError) {
			// –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –∫–∞—Å—Ç–æ–º–Ω—ã–π fallback, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ
			if (this.props.fallback) {
				return this.props.fallback;
			}

			// –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π fallback UI
			return (
				<div
					className='min-h-screen flex flex-col items-center justify-center p-4'
					style={{
						background: 'var(--tg-theme-bg-color)',
						color: 'var(--tg-theme-text-color)',
					}}
				>
					<div className='text-center max-w-md'>
						<h2 className='text-2xl font-bold mb-4 text-red-500'>
							–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòî
						</h2>
						<p className='text-gray-600 mb-6'>
							–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.
						</p>

						{/* –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ —Ç–æ–ª—å–∫–æ –≤ development */}
						{import.meta.env.DEV && this.state.error && (
							<details className='mb-6 text-left'>
								<summary className='cursor-pointer text-sm text-gray-500 mb-2'>
									–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
								</summary>
								<pre className='text-xs bg-gray-100 p-3 rounded overflow-auto max-h-40'>
									{this.state.error.toString()}
									{this.state.errorInfo?.componentStack}
								</pre>
							</details>
						)}

						<div className='flex flex-col gap-3'>
							<button
								onClick={this.handleReload}
								className='py-3 px-6 rounded-lg font-medium transition-opacity hover:opacity-80'
								style={{
									background: 'var(--tg-theme-button-color)',
									color: 'var(--tg-theme-button-text-color)',
								}}
							>
								–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
							</button>

							<button
								onClick={this.handleReset}
								className='py-2 px-4 text-sm text-gray-500 hover:text-gray-700 transition-colors'
							>
								–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑
							</button>
						</div>
					</div>
				</div>
			);
		}

		return this.props.children;
	}
}

export default ErrorBoundary;
