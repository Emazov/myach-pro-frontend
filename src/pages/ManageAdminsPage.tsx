import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import { useTelegram } from '../hooks/useTelegram';
import {
	fetchAdmins,
	removeAdmin,
	searchUsers,
	addAdminByUsername,
} from '../api';

interface AdminUser {
	id: string;
	telegramId: string;
	username: string | null;
	addedBy: string | null;
	createdAt: string;
}

interface User {
	telegramId: string;
	username: string | null;
	role: string;
}

const ManageAdminsPage: React.FC = () => {
	const { initData } = useTelegram();
	const navigate = useNavigate();
	const [admins, setAdmins] = useState<AdminUser[]>([]);
	const [loading, setLoading] = useState(true);
	const [isAddModalOpen, setIsAddModalOpen] = useState(false);
	const [searchQuery, setSearchQuery] = useState('');
	const [searchResults, setSearchResults] = useState<User[]>([]);
	const [searchLoading, setSearchLoading] = useState(false);
	const [selectedUser, setSelectedUser] = useState<User | null>(null);
	const [operationLoading, setOperationLoading] = useState(false);

	useEffect(() => {
		loadAdmins();
	}, []);

	const loadAdmins = async () => {
		if (!initData) return;

		try {
			setLoading(true);
			const adminsData = await fetchAdmins(initData);
			setAdmins(adminsData);
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∞–¥–º–∏–Ω–æ–≤:', error);
		} finally {
			setLoading(false);
		}
	};

	// –ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
	const handleSearch = async (query: string) => {
		if (!initData || !query.trim()) {
			setSearchResults([]);
			return;
		}

		try {
			setSearchLoading(true);
			const users = await searchUsers(initData, query.trim());
			setSearchResults(users);
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', error);
			setSearchResults([]);
		} finally {
			setSearchLoading(false);
		}
	};

	// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞
	const handleAddAdmin = async () => {
		if (!initData || !selectedUser?.username) return;

		try {
			setOperationLoading(true);
			const result = await addAdminByUsername(initData, selectedUser.username);

			if (result.success) {
				alert('–ê–¥–º–∏–Ω —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω!');
				setIsAddModalOpen(false);
				setSearchQuery('');
				setSearchResults([]);
				setSelectedUser(null);
				await loadAdmins();
			} else {
				alert(`–û—à–∏–±–∫–∞: ${result.message}`);
			}
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∞:', error);
			alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∞');
		} finally {
			setOperationLoading(false);
		}
	};

	const handleRemoveAdmin = async (admin: AdminUser) => {
		if (!initData) return;

		if (!confirm(`–£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∞ ${admin.username || admin.telegramId}?`)) {
			return;
		}

		try {
			setOperationLoading(true);
			const result = await removeAdmin(initData, admin.telegramId);

			if (result.success) {
				alert('–ê–¥–º–∏–Ω —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω!');
				await loadAdmins();
			} else {
				alert(`–û—à–∏–±–∫–∞: ${result.message}`);
			}
		} catch (error) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∞:', error);
			alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∞');
		} finally {
			setOperationLoading(false);
		}
	};

	if (loading) {
		return (
			<div className='min-h-screen bg-gray-900 flex items-center justify-center'>
				<div className='text-white text-xl'>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
			</div>
		);
	}

	return (
		<div className='min-h-screen bg-gray-900 text-white p-4'>
			<div className='max-w-4xl mx-auto'>
				{/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
				<div className='flex items-center justify-between mb-6'>
					<div className='flex items-center gap-4'>
						<button
							onClick={() => navigate('/admin')}
							className='text-blue-400 hover:text-blue-300 text-lg'
						>
							‚Üê –ù–∞–∑–∞–¥
						</button>
						<h1 className='text-2xl font-bold'>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º–∏</h1>
					</div>
					<button
						onClick={() => setIsAddModalOpen(true)}
						className='bg-green-600 hover:bg-green-700 px-4 py-2 rounded-lg'
						disabled={operationLoading}
					>
						–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞
					</button>
				</div>

				{/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å */}
				<div className='bg-blue-900 border border-blue-700 rounded-lg p-4 mb-6'>
					<h3 className='text-lg font-semibold mb-2 text-blue-300'>
						üí° –ö–∞–∫ –¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞?
					</h3>
					<div className='text-sm text-blue-200 space-y-2'>
						<p>‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω —Å–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–∞–∑</p>
						<p>
							‚Ä¢ –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω @username –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
							Telegram
						</p>
						<p>‚Ä¢ –í–≤–µ–¥–∏—Ç–µ @username –≤ –ø–æ–ª–µ –ø–æ–∏—Å–∫–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: @ivan_petrov)</p>
						<p>
							‚Ä¢ –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ - –ø–æ–ø—Ä–æ—Å–∏—Ç–µ –µ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å
							–±–æ—Ç–∞
						</p>
					</div>
				</div>

				{/* –°–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤ */}
				<div className='space-y-4'>
					{admins.map((admin) => (
						<div
							key={admin.id}
							className='bg-gray-800 rounded-lg p-4 flex items-center justify-between'
						>
							<div>
								<div className='text-lg font-semibold'>
									{admin.username || '–ë–µ–∑ –∏–º–µ–Ω–∏'}
								</div>
								<div className='text-gray-400 text-sm'>
									ID: {admin.telegramId}
								</div>
								<div className='text-gray-500 text-xs'>
									{admin.addedBy
										? `–î–æ–±–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–æ–º: ${admin.addedBy}`
										: '–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω'}
								</div>
								<div className='text-gray-500 text-xs'>
									{new Date(admin.createdAt).toLocaleString('ru-RU')}
								</div>
							</div>

							<div className='flex gap-2'>
								{admin.id !== 'main-admin' && (
									<button
										onClick={() => handleRemoveAdmin(admin)}
										className='bg-red-600 hover:bg-red-700 px-3 py-1 rounded text-sm'
										disabled={operationLoading}
									>
										–£–¥–∞–ª–∏—Ç—å
									</button>
								)}
								{admin.id === 'main-admin' && (
									<span className='text-gray-400 text-sm'>–ì–ª–∞–≤–Ω—ã–π –∞–¥–º–∏–Ω</span>
								)}
							</div>
						</div>
					))}
				</div>

				{admins.length === 0 && (
					<div className='text-center text-gray-400 py-8'>
						–ê–¥–º–∏–Ω—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
					</div>
				)}
			</div>

			{/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞ */}
			{isAddModalOpen && (
				<div className='fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50'>
					<div className='bg-gray-800 rounded-lg p-6 w-full max-w-md'>
						<h2 className='text-xl font-bold mb-4'>–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∞</h2>

						<div className='space-y-4'>
							<div>
								<label className='block text-sm font-medium mb-2'>
									–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è *
								</label>
								<input
									type='text'
									value={searchQuery}
									onChange={(e) => {
										setSearchQuery(e.target.value);
										handleSearch(e.target.value);
									}}
									className='w-full bg-gray-700 border border-gray-600 rounded-lg px-3 py-2'
									placeholder='–í–≤–µ–¥–∏—Ç–µ @username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
								/>
								{searchLoading && (
									<div className='text-sm text-gray-400 mt-1'>–ü–æ–∏—Å–∫...</div>
								)}
							</div>

							{/* –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ */}
							{searchResults.length > 0 && (
								<div className='max-h-40 overflow-y-auto bg-gray-700 rounded-lg'>
									{searchResults.map((user) => (
										<div
											key={user.telegramId}
											onClick={() => {
												setSelectedUser(user);
												setSearchQuery(user.username || '');
												setSearchResults([]);
											}}
											className={`p-3 cursor-pointer hover:bg-gray-600 border-b border-gray-600 last:border-b-0 ${
												selectedUser?.telegramId === user.telegramId
													? 'bg-gray-600'
													: ''
											}`}
										>
											<div className='font-medium'>
												{user.username ? `@${user.username}` : '–ë–µ–∑ username'}
											</div>
											<div className='text-sm text-gray-400'>
												{user.role === 'admin'
													? '‚ö†Ô∏è –£–∂–µ –∞–¥–º–∏–Ω'
													: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å'}
											</div>
										</div>
									))}
								</div>
							)}

							{/* –í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å */}
							{selectedUser && (
								<div className='bg-gray-700 rounded-lg p-3'>
									<div className='text-sm text-gray-400 mb-1'>
										–í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:
									</div>
									<div className='font-medium'>
										{selectedUser.username
											? `@${selectedUser.username}`
											: '–ë–µ–∑ username'}
									</div>
									<div className='text-sm text-gray-400'>
										ID: {selectedUser.telegramId}
									</div>
									{selectedUser.role === 'admin' && (
										<div className='text-sm text-yellow-400 mt-1'>
											‚ö†Ô∏è –≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–æ–º
										</div>
									)}
								</div>
							)}

							{searchQuery && searchResults.length === 0 && !searchLoading && (
								<div className='text-sm text-gray-400'>
									–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å.
								</div>
							)}
						</div>

						<div className='flex gap-3 mt-6'>
							<button
								onClick={handleAddAdmin}
								disabled={
									operationLoading ||
									!selectedUser?.username ||
									selectedUser.role === 'admin'
								}
								className='flex-1 bg-green-600 hover:bg-green-700 disabled:bg-gray-600 px-4 py-2 rounded-lg'
							>
								{operationLoading ? '–î–æ–±–∞–≤–ª–µ–Ω–∏–µ...' : '–î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∞'}
							</button>
							<button
								onClick={() => {
									setIsAddModalOpen(false);
									setSearchQuery('');
									setSearchResults([]);
									setSelectedUser(null);
								}}
								disabled={operationLoading}
								className='flex-1 bg-gray-600 hover:bg-gray-700 px-4 py-2 rounded-lg'
							>
								–û—Ç–º–µ–Ω–∞
							</button>
						</div>
					</div>
				</div>
			)}
		</div>
	);
};

export default ManageAdminsPage;
