import { useState, useEffect } from 'react';
import { useGameStore, useUserStore } from '../store';
import { CategoryItem, LoadingSpinner, ShareTestPanel } from '../components';
import { fetchClubs } from '../api';
import {
	downloadResultsImage,
	shareResults,
	type ShareData,
} from '../api/shareService';
import { useTelegram } from '../hooks/useTelegram';
import { getProxyImageUrl } from '../utils/imageUtils';
import { completeGameSession } from '../api/analyticsService';
import { TELEGRAM_BOT_USERNAME } from '../config/api';
import { Link } from 'react-router-dom';
import {
	universalShare,
	detectPlatform,
	getAvailableShareMethods,
	type ShareOptions,
} from '../utils/shareUtils';
import { securityUtils } from '../utils/securityUtils';

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞–∑–≤–∞–Ω–∏—è –∫–ª—É–±–∞
const getDisplayClubName = (clubName: string): string => {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ "–∫–ª—É–±" (—Ä–µ–≥–∏—Å—Ç—Ä–æ–Ω–µ–∑–∞–≤–∏—Å–∏–º–æ)
	const hasClub = clubName.toLowerCase().includes('–∫–ª—É–±');

	// –ò—â–µ–º —Å–µ–∑–æ–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ YYYY/YY
	const seasonMatch = clubName.match(/(\d{4}\/\d{2})/);

	if (hasClub && seasonMatch) {
		const season = seasonMatch[1];
		return `–¢–≤–æ–π —Ç–∏—Ä-–ª–∏—Å—Ç –∫–ª—É–±–æ–≤ ${season}`;
	}

	return clubName;
};

const Results = () => {
	const { initData, tg } = useTelegram();
	const { isAdmin } = useUserStore();
	const { categorizedPlayers, categories } = useGameStore();
	const [club, setClub] = useState<any>(null);
	const [isLoading, setIsLoading] = useState(true);
	const [error, setError] = useState<string | null>(null);
	const [isSharing, setIsSharing] = useState(false);
	const [shareStatus, setShareStatus] = useState<string>('');
	const [hasSharedInSession, setHasSharedInSession] = useState(false); // –§–ª–∞–≥ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Å–µ—Å—Å–∏–∏
	const [platform] = useState(() => detectPlatform());
	const [availableMethods] = useState(() => getAvailableShareMethods());

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã
	const hasGameData =
		categories.length > 0 &&
		Object.keys(categorizedPlayers).length > 0 &&
		Object.values(categorizedPlayers).some((players) => players.length > 0);

	useEffect(() => {
		const loadClub = async () => {
			if (!initData) {
				setError('–î–∞–Ω–Ω—ã–µ Telegram –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
				setIsLoading(false);
				return;
			}

			try {
				const clubs = await fetchClubs(initData);
				if (clubs && clubs.length > 0) {
					setClub(clubs[0]);
				} else {
					setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª—É–±–µ');
				}

				// –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–≥—Ä—ã –ø—Ä–∏ –∑–∞—Ö–æ–¥–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
				if (hasGameData) {
					completeGameSession(initData).catch((error) => {
						console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∏–≥—Ä—ã:', error);
					});
				}
			} catch (err) {
				console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–ª—É–±–µ:', err);
				setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–ª—É–±–µ');
			} finally {
				setIsLoading(false);
			}
		};

		loadClub();
	}, [initData, hasGameData]);

	// –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–ª–∏–∫–∞ –ø–æ –∫–Ω–æ–ø–∫–µ "–ü–æ–¥–µ–ª–∏—Ç—å—Å—è"
	const handleShare = async () => {
		if (isAdmin) {
			try {
				// –ü—Ä–æ–≤–µ—Ä—è–µ–º origin –¥–ª—è –∑–∞—â–∏—Ç—ã –æ—Ç CSRF
				if (!securityUtils.checkOrigin(window.location.origin)) {
					throw new Error('–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π –∏—Å—Ç–æ—á–Ω–∏–∫ –∑–∞–ø—Ä–æ—Å–∞');
				}

				// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–∞ –ª–∏ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞ –≤ —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏
				if (hasSharedInSession) {
					setShareStatus('üö´ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —É–∂–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —ç—Ç–æ–π —Å–µ—Å—Å–∏–∏');
					setTimeout(() => setShareStatus(''), 3000);
					return;
				}

				if (!initData || !club || !hasGameData) {
					setShareStatus('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
					setTimeout(() => setShareStatus(''), 3000);
					return;
				}

				setIsSharing(true);

				// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º categorizedPlayers –≤ categorizedPlayerIds (—Ç–æ–ª—å–∫–æ IDs)
				const categorizedPlayerIds: { [categoryName: string]: string[] } = {};

				Object.entries(categorizedPlayers).forEach(
					([categoryName, players]) => {
						categorizedPlayerIds[categoryName] = players.map(
							(player) => player.id,
						);
					},
				);

				const shareData: ShareData = {
					categorizedPlayerIds,
					categories,
					clubId: club.id,
				};

				// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–µ—Ç–æ–¥–∞ —à—ç—Ä–∏–Ω–≥–∞
				if (platform === 'ios') {
					// –î–ª—è iOS –æ—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å webview
					// –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ –≤—ã—Å–æ–∫–æ–º –∫–∞—á–µ—Å—Ç–≤–µ
					const { blob } = await downloadResultsImage(initData, shareData);

					// –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ —à—ç—Ä–∏–Ω–≥–∞
					const shareOptions: ShareOptions = {
						imageBlob: blob,
						text: `–°–æ–±–µ—Ä–∏ —Å–≤–æ–π —Ç–∏—Ä –ª–∏—Å—Ç - @${TELEGRAM_BOT_USERNAME}`,
						clubName: club.name,
					};

					// –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é —à—ç—Ä–∏–Ω–≥–∞ –¥–ª—è iOS
					const result = await universalShare(shareOptions);

					if (result.success) {
						// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Å–µ—Å—Å–∏–∏
						setHasSharedInSession(true);

						// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
						setShareStatus('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–¥–µ–ª–µ–Ω–æ!');

						// –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —à—ç—Ä–∏–Ω–≥–∞
						if (tg && tg.close) {
							setTimeout(() => {
								tg.close();
							}, 500);
						}
					} else {
						setShareStatus(`‚ùå ${result.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è'}`);
					}
				} else {
					// –î–ª—è –¥—Ä—É–≥–∏—Ö –û–° –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –≤ —á–∞—Ç –±–æ—Ç–∞
					console.log('üîç –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ —á–∞—Ç –¥–ª—è Android/–¥—Ä. –û–°:');
					console.log('üìã initData –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç:', !!initData);
					console.log('üìã initData length:', initData?.length);
					console.log('üì¶ shareData:', shareData);

					const result = await shareResults(initData, shareData);

					if (result.success) {
						// –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–ª–∞–≥ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Å–µ—Å—Å–∏–∏
						setHasSharedInSession(true);

						// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
						setShareStatus('‚úÖ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç!');

						// –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
						if (tg && tg.close) {
							// –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
							setTimeout(() => {
								tg.close();
							}, 500);
						}
					} else {
						setShareStatus(
							`‚ùå ${result.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç'}`,
						);
					}
				}
			} catch (error: any) {
				console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —à—ç—Ä–∏–Ω–≥–µ:', error);
				if (platform === 'ios') {
					setShareStatus(
						`‚ùå ${error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ'}`,
					);
				} else {
					setShareStatus(`‚ùå ${error.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç'}`);
				}
			} finally {
				setIsSharing(false);

				// –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ç—É—Å —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
				setTimeout(() => setShareStatus(''), 3000);
			}
		}
	};

	// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —à—ç—Ä–∏–Ω–≥–∞ (—Ç–æ–ª—å–∫–æ –≤ development)
	const getTestShareOptions = async (
		testInitData: string,
	): Promise<ShareOptions> => {
		if (!club || !hasGameData) {
			throw new Error('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
		}

		// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º categorizedPlayers –≤ categorizedPlayerIds (—Ç–æ–ª—å–∫–æ IDs)
		const categorizedPlayerIds: { [categoryName: string]: string[] } = {};

		Object.entries(categorizedPlayers).forEach(([categoryName, players]) => {
			categorizedPlayerIds[categoryName] = players.map((player) => player.id);
		});

		const shareData: ShareData = {
			categorizedPlayerIds,
			categories,
			clubId: club.id,
		};

		// –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
		const { blob } = await downloadResultsImage(testInitData, shareData);

		return {
			imageBlob: blob,
			text: `–¢–µ—Å—Ç —à—ç—Ä–∏–Ω–≥–∞ —Ç–∏—Ä-–ª–∏—Å—Ç–∞ - @${TELEGRAM_BOT_USERNAME}`,
			clubName: club.name,
		};
	};

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –µ—â–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã
	if (isLoading) {
		return <LoadingSpinner fullScreen message='–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤...' />;
	}

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
	if (error || !club) {
		return (
			<div
				className='min-h-screen flex flex-col items-center justify-center p-4'
				style={{
					background: 'var(--tg-theme-bg-color)',
					color: 'var(--tg-theme-text-color)',
				}}
			>
				<div className='text-center max-w-md'>
					<h2 className='text-2xl font-bold mb-4 text-red-500'>
						{error || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö'}
					</h2>
					<button
						className='py-3 px-6 rounded-lg font-medium transition-opacity hover:opacity-80'
						style={{
							background: 'var(--tg-theme-button-color)',
							color: 'var(--tg-theme-button-text-color)',
						}}
						onClick={() => window.location.reload()}
					>
						–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
					</button>
				</div>
			</div>
		);
	}

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∏–≥—Ä—ã
	if (!hasGameData) {
		return (
			<div
				className='min-h-screen flex flex-col items-center justify-center p-4'
				style={{
					background: 'var(--tg-theme-bg-color)',
					color: 'var(--tg-theme-text-color)',
				}}
			>
				<div className='text-center max-w-md'>
					<h2 className='text-2xl font-bold mb-4'>
						–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
					</h2>
					<p className='text-lg mb-6'>
						–°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–π–¥–∏—Ç–µ –∏–≥—Ä—É, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
					</p>
					<button
						className='py-3 px-6 rounded-lg font-medium transition-opacity hover:opacity-80'
						style={{
							background: 'var(--tg-theme-button-color)',
							color: 'var(--tg-theme-button-text-color)',
						}}
						onClick={() => window.history.back()}
					>
						–í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥
					</button>
				</div>
			</div>
		);
	}

	return (
		<div className='min-h-screen bg-[url("/main_bg.jpg")] flex flex-col'>
			<div className='flex-1 flex flex-col'>
				{/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –º—è—á–æ–º */}
				<div className='flex items-center justify-center gap-3'>
					<img
						src='./main_logo.png'
						alt='main_logo'
						className='w-40 object-contain'
						loading='eager'
					/>
				</div>

				{/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
				<div className='bg-[var(--tg-theme-bg-color)] flex-1 rounded-t-3xl px-4 pt-6 '>
					{/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∏—Ä-–ª–∏—Å—Ç–∞ –∏ –ª–æ–≥–æ—Ç–∏–ø */}
					<div className='flex items-center justify-center gap-2 mb-6'>
						<div className='flex items-center gap-2'>
							{getDisplayClubName(club.name) === club.name && (
								<img
									src={getProxyImageUrl(club.img_url)}
									alt={club.name}
									className='w-10 object-contain rounded-full'
									loading='eager'
									onError={(e) => {
										// –ï—Å–ª–∏ –ª–æ–≥–æ—Ç–∏–ø –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è, —Å–∫—Ä—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
										const target = e.target as HTMLImageElement;
										target.style.display = 'none';
									}}
								/>
							)}
							<span className='text-[clamp(1.5rem,2.5vw,3rem)] font-bold text-center'>
								{getDisplayClubName(club.name)}
							</span>
						</div>
					</div>

					{/* –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
					<ul className='category_list flex flex-col gap-3 mb-6'>
						{categories.map((category) => {
							const players = categorizedPlayers[category.name] || [];
							return (
								<CategoryItem
									key={`category-${category.name}`}
									category={category}
									players={players}
									showPlayerImages={true}
									showSkeletons={true}
								/>
							);
						})}
					</ul>

					{/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏) */}
					{import.meta.env.DEV && isAdmin && (
						<div className='text-xs text-gray-500 mb-4'>
							<p>–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞: {platform}</p>
							<p>
								–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–µ—Ç–æ–¥—ã:{' '}
								{availableMethods
									.filter((m) => m.available)
									.map((m) => m.name)
									.join(', ')}
							</p>
						</div>
					)}

					{/* –ö–Ω–æ–ø–∫–∞ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏ —Å—Ç–∞—Ç—É—Å */}
					{isAdmin && (
						<div className='flex flex-col items-center justify-center gap-2'>
							<button
								className={`font-bold py-3 px-8 rounded-lg text-lg w-fit disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 ${
									hasSharedInSession
										? 'bg-gray-300 text-gray-600'
										: 'bg-[#FFEC13] text-black'
								}`}
								onClick={handleShare}
								disabled={isSharing || hasSharedInSession}
							>
								{hasSharedInSession
									? '‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ'
									: isSharing
									? platform === 'ios'
										? '–ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º...'
										: '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º...'
									: platform === 'ios'
									? '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è'
									: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ —á–∞—Ç'}
							</button>

							{/* –°—Ç–∞—Ç—É—Å —à—ç—Ä–∏–Ω–≥–∞ */}
							{shareStatus && (
								<div
									className={`text-sm px-4 py-2 rounded-lg max-w-xs text-center ${
										shareStatus.startsWith('‚úÖ')
											? 'bg-green-100 text-green-800'
											: shareStatus.startsWith('‚ùå')
											? 'bg-red-100 text-red-800'
											: shareStatus.startsWith('üö´')
											? 'bg-orange-100 text-orange-800'
											: 'bg-blue-100 text-blue-800'
									}`}
								>
									{shareStatus}
								</div>
							)}

							{isAdmin && (
								<Link
									to='/admin'
									className='inline-block bg-[#FFEC13] text-black font-bold py-3 px-8 rounded-lg text-lg w-fit'
								>
									–ê–¥–º–∏–Ω
								</Link>
							)}
						</div>
					)}
				</div>
			</div>

			{/* –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —à—ç—Ä–∏–Ω–≥–∞ –≤ development —Ä–µ–∂–∏–º–µ */}
			{import.meta.env.DEV && isAdmin && hasGameData && club && (
				<ShareTestPanel
					onTestShare={getTestShareOptions}
					initData={initData || ''}
				/>
			)}
		</div>
	);
};

export default Results;
