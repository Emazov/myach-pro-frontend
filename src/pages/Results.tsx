import { useState, useEffect, useRef } from 'react';
import { useGameStore } from '../store';
import { CategoryItem } from '../components';
import { fetchClubs, sendTierListImage, getBotChats } from '../api';
import { useTelegram } from '../hooks/useTelegram';
import html2canvas from 'html2canvas';

const Results = () => {
	const { initData, tg } = useTelegram();
	const { categorizedPlayers, categories } = useGameStore();
	const [club, setClub] = useState<any>(null);
	const [isLoading, setIsLoading] = useState(true);
	const [isSharing, setIsSharing] = useState(false);
	const [error, setError] = useState<string | null>(null);
	const resultsRef = useRef<HTMLDivElement>(null);

	useEffect(() => {
		const loadClub = async () => {
			if (!initData) {
				setError('–î–∞–Ω–Ω—ã–µ Telegram –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
				setIsLoading(false);
				return;
			}

			try {
				const clubs = await fetchClubs(initData);
				if (clubs && clubs.length > 0) {
					setClub(clubs[0]);
				} else {
					setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª—É–±–µ');
				}
			} catch (err) {
				console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–ª—É–±–µ:', err);
				setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –æ –∫–ª—É–±–µ');
			} finally {
				setIsLoading(false);
			}
		};

		loadClub();
	}, [initData]);

	// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
	const preloadImages = async (): Promise<void> => {
		const imageUrls: string[] = [];

		// –î–æ–±–∞–≤–ª—è–µ–º –ª–æ–≥–æ—Ç–∏–ø –∫–ª—É–±–∞
		if (club?.img_url) {
			imageUrls.push(club.img_url);
		}

		// –î–æ–±–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–µ—Ö –∏–≥—Ä–æ–∫–æ–≤
		categories.forEach((category) => {
			const players = categorizedPlayers[category.name] || [];
			players.forEach((player) => {
				if (player.img_url) {
					imageUrls.push(player.img_url);
				}
			});
		});

		// –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
		const loadPromises = imageUrls.map((url) => {
			return new Promise<void>((resolve) => {
				const img = new Image();
				img.crossOrigin = 'anonymous'; // –î–ª—è —Ä–∞–±–æ—Ç—ã —Å CORS
				img.onload = () => resolve();
				img.onerror = () => {
					console.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: ${url}`);
					resolve(); // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –¥–∞–∂–µ –µ—Å–ª–∏ –æ–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å
				};
				img.src = url;
			});
		});

		await Promise.all(loadPromises);

		// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞
		await new Promise((resolve) => setTimeout(resolve, 500));
	};

	const handleShare = async () => {
		if (!resultsRef.current) return;

		setIsSharing(true);
		try {
			// –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
			await preloadImages();

			// –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º DOM –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
			// –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã –∏ –≤–∏–¥–∏–º–æ—Å—Ç—å –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
			const prepareDOM = () => {
				const allImages = document.querySelectorAll('img');
				allImages.forEach((img) => {
					img.style.visibility = 'visible';
					img.style.opacity = '1';

					// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
					const originalSrc = img.getAttribute('src');
					if (originalSrc && !img.hasAttribute('data-original-src')) {
						img.setAttribute('data-original-src', originalSrc);
						// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ª–∏ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
						if (img.complete && img.naturalWidth === 0) {
							console.warn(`–ü—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–≥—Ä—É–∑–∫–æ–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${originalSrc}`);
							// –ü—Ä–æ–±—É–µ–º –¥–æ–±–∞–≤–∏—Ç—å –∫—ç—à-–±–∞—Å—Ç–∏–Ω–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä
							img.src = `${originalSrc}?t=${new Date().getTime()}`;
						}
					}
				});
			};

			// –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º DOM
			prepareDOM();

			// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–∂–∏–¥–∞–Ω–∏–µ –¥–ª—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
			await new Promise((resolve) => setTimeout(resolve, 1000));

			// –°–æ–∑–¥–∞—ë–º —Å–∫—Ä–∏–Ω—à–æ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
			const canvas = await html2canvas(resultsRef.current, {
				backgroundColor: '#ffffff',
				scale: 2, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∫–∞—á–µ—Å—Ç–≤–æ
				useCORS: true,
				allowTaint: true, // –†–∞–∑—Ä–µ—à–∞–µ–º "taint" –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ–±–ª–µ–º–Ω—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
				imageTimeout: 5000, // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
				logging: true, // –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
				width: resultsRef.current.offsetWidth,
				height: resultsRef.current.offsetHeight,
				scrollX: 0,
				scrollY: 0,
				onclone: (clonedDoc) => {
					// –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ –∫–ª–æ–Ω–µ
					const images = clonedDoc.querySelectorAll('img');
					images.forEach((img) => {
						img.crossOrigin = 'anonymous';
						// –ü—Ä–∏–º–µ–Ω—è–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—É—é –≤–∏–¥–∏–º–æ—Å—Ç—å
						img.style.visibility = 'visible';
						img.style.opacity = '1';

						// –î–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª–∏—Å—å, –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
						if (img.complete && img.naturalWidth === 0) {
							// –≠—Ç–æ—Ç –∫–æ–¥ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–º DOM, –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–π –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
							img.src =
								"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Crect width='24' height='24' fill='%23cccccc'/%3E%3Ctext x='50%25' y='50%25' font-size='8' text-anchor='middle' dy='.3em' fill='%23666666'%3E?%3C/text%3E%3C/svg%3E";
						}
					});
				},
			});

			// –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º canvas –≤ blob
			canvas.toBlob(async (blob) => {
				if (!blob) {
					console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
					return;
				}

				try {
					// –ü—Ä–æ–±—É–µ–º –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ Web Share API (—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –±—Ä–∞—É–∑–µ—Ä—ã)
					if (navigator.share && navigator.canShare) {
						const file = new File(
							[blob],
							`—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã_${club?.name || '–∫–æ–º–∞–Ω–¥—ã'}.png`,
							{
								type: 'image/png',
							},
						);

						if (navigator.canShare({ files: [file] })) {
							await navigator.share({
								title: `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è - ${club?.name}`,
								text: '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º',
								files: [file],
							});

							if (tg && tg.showAlert) {
								tg.showAlert('–ö–∞—Ä—Ç–∏–Ω–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!');
							}
							return;
						}
					}

					// –ï—Å–ª–∏ Web Share API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ Telegram Web App
					if (tg) {
						try {
							// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º blob –≤ base64 –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ API
							const reader = new FileReader();
							reader.readAsDataURL(blob);
							reader.onloadend = async () => {
								const base64data = reader.result as string;

								// –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
								const resultText = categories
									.map((category) => {
										const players = categorizedPlayers[category.name] || [];
										return `${category.name}: ${players
											.map((p) => p.name)
											.join(', ')}`;
									})
									.join('\n');

								const shareText = `üèÜ –¢–ò–†-–õ–ò–°–¢ ${club?.name.toUpperCase()}\n\n${resultText}\n\nüëâ –°–æ–±–µ—Ä–∏ —Å–≤–æ–π —Ç–∏—Ä-–ª–∏—Å—Ç –≤ –±–æ—Ç–µ @MyachProBot`;

								try {
									// –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ –Ω–∞—à API –±–æ—Ç–∞
									if (initData) {
										// –ü–æ–ª—É—á–∞–µ–º chatId –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
										const chatInfo = await getBotChats(initData);

										if (chatInfo.chatId) {
											// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ API
											await sendTierListImage(
												initData,
												base64data,
												chatInfo.chatId,
												club?.name || '',
												shareText,
											);

											if (tg && tg.showAlert) {
												tg.showAlert('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ —á–∞—Ç!');
											}
											return;
										}
									}

									// –ó–∞–ø–∞—Å–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –µ—Å–ª–∏ API –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª
									if (tg) {
										if (tg.sendData) {
											// –û—Ç–ø—Ä–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telegram WebApp API
											const data = JSON.stringify({
												type: 'photo',
												data: base64data,
												text: shareText,
											});
											tg.sendData(data);
											if (tg.showAlert) {
												tg.showAlert('–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ —á–∞—Ç!');
											}
											return;
										} else if (tg.switchInlineQuery) {
											// –¢–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ inline query
											tg.switchInlineQuery(shareText, ['users', 'groups']);
											if (tg.showAlert) {
												tg.showAlert('–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤');
											}
											return;
										}
									}
								} catch (err) {
									console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —á–µ—Ä–µ–∑ API –±–æ—Ç–∞:', err);

									// –ï—Å–ª–∏ API –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–±—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –º–µ—Ç–æ–¥—ã Telegram
									if (tg && tg.switchInlineQuery) {
										tg.switchInlineQuery(shareText, ['users', 'groups']);
										if (tg.showAlert) {
											tg.showAlert('–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤');
										}
									}
								}
							};
							return; // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
						} catch (err) {
							console.error(
								'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:',
								err,
							);
							// –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ API, –∏—Å–ø–æ–ª—å–∑—É–µ–º switchInlineQuery
							if (tg.switchInlineQuery) {
								const resultText = categories
									.map((category) => {
										const players = categorizedPlayers[category.name] || [];
										return `${category.name}: ${players
											.map((p) => p.name)
											.join(', ')}`;
									})
									.join('\n');

								const shareText = `üèÜ –¢–ò–†-–õ–ò–°–¢ ${club?.name.toUpperCase()}\n\n${resultText}\n\nüëâ –°–æ–±–µ—Ä–∏ —Å–≤–æ–π —Ç–∏—Ä-–ª–∏—Å—Ç –≤ –±–æ—Ç–µ @MyachProBot`;
								tg.switchInlineQuery(shareText, ['users', 'groups']);
							}
						}
						return;
					}

					// –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç - —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
					const url = URL.createObjectURL(blob);
					const link = document.createElement('a');
					link.href = url;
					link.download = `—Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã_${club?.name || '–∫–æ–º–∞–Ω–¥—ã'}.png`;
					document.body.appendChild(link);
					link.click();
					document.body.removeChild(link);
					URL.revokeObjectURL(url);

					if (tg && tg.showAlert) {
						tg.showAlert(
							'–ö–∞—Ä—Ç–∏–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –∑–∞–≥—Ä—É–∑–∫–∏. –í—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –µ–π –≤ —á–∞—Ç–µ.',
						);
					}
				} catch (err) {
					console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', err);
					if (tg && tg.showAlert) {
						tg.showAlert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.');
					}
				}
			}, 'image/png');
		} catch (err) {
			console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞:', err);
			if (tg && tg.showAlert) {
				tg.showAlert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏');
			}
		} finally {
			setIsSharing(false);
		}
	};

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –µ—â–µ –Ω–µ –ø–æ–ª—É—á–µ–Ω—ã
	if (isLoading) {
		return (
			<div className='container flex flex-col items-center justify-center h-full'>
				<div className='text-2xl font-bold'>–ó–∞–≥—Ä—É–∑–∫–∞...</div>
			</div>
		);
	}

	// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫
	if (error || !club) {
		return (
			<div className='container flex flex-col items-center justify-center h-full'>
				<div className='text-2xl font-bold text-red-500'>
					{error || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö'}
				</div>
				<button
					className='mt-4 px-4 py-2 bg-blue-500 text-white rounded'
					onClick={() => window.location.reload()}
				>
					–û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
				</button>
			</div>
		);
	}

	return (
		<div className='min-h-screen bg-gradient-to-b from-[#EC3381] to-[#FF6B9D] flex flex-col'>
			<div ref={resultsRef} className='flex-1 flex flex-col'>
				{/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –º—è—á–æ–º */}
				<div className='text-center py-6'>
					<div className='flex items-center justify-center gap-3 mb-2'>
						<div className='w-12 h-12 rounded-full bg-gradient-to-br from-purple-500 to-yellow-400 flex items-center justify-center'>
							<span className='text-2xl'>‚öΩ</span>
						</div>
					</div>
					<h1 className='text-white text-3xl font-bold'>–†–ï–ó–£–õ–¨–¢–ê–¢</h1>
				</div>

				{/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
				<div className='bg-white rounded-t-3xl flex-1 px-4 pt-6 pb-4'>
					{/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∏—Ä-–ª–∏—Å—Ç–∞ –∏ –ª–æ–≥–æ—Ç–∏–ø */}
					<div className='flex items-center justify-between mb-6'>
						<div>
							<h2 className='text-black text-lg font-bold'>–¢–ò–†-–õ–ò–°–¢ –ò–ì–†–û–ö–û–í</h2>
							<div className='flex items-center gap-2 mt-1'>
								<img
									src={club.img_url}
									alt={club.name}
									className='w-6 h-6 object-contain'
									crossOrigin='anonymous'
									loading='eager'
									onError={(e) => {
										// –ï—Å–ª–∏ –ª–æ–≥–æ—Ç–∏–ø –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è, –ø–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä
										const target = e.target as HTMLImageElement;
										target.onerror = null;
										target.src = `data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24' viewBox='0 0 24 24'%3E%3Crect width='24' height='24' fill='%23EC3381'/%3E%3Ctext x='50%25' y='50%25' font-size='12' text-anchor='middle' dy='.3em' fill='white'%3E${club.name.charAt(
											0,
										)}%3C/text%3E%3C/svg%3E`;
									}}
								/>
								<span className='text-black font-semibold'>{club.name}</span>
							</div>
						</div>
						<div className='text-right'>
							<span className='text-black text-sm'>–ú–Ø–ß</span>
						</div>
					</div>

					{/* –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
					<ul className='category_list flex flex-col gap-3 mb-6'>
						{categories.map((category) => {
							const players = categorizedPlayers[category.name] || [];
							return (
								<CategoryItem
									key={`category-${category.name}`}
									category={category}
									players={players}
									showPlayerImages={true}
								/>
							);
						})}
					</ul>

					{/* –°—Å—ã–ª–∫–∞ –Ω–∞ –±–æ—Ç–∞ */}
					<div className='text-center mb-6'>
						<a
							href='https://t.me/MyachProBot'
							className='inline-flex items-center gap-2 text-blue-600 text-sm font-medium'
							target='_blank'
							rel='noopener noreferrer'
						>
							<span>üîó</span>
							–°–æ–±–µ—Ä–∏ —Å–≤–æ–π —Ç–∏—Ä-–ª–∏—Å—Ç –≤ –±–æ—Ç–µ
						</a>
					</div>
				</div>
			</div>

			{/* –ö–Ω–æ–ø–∫–∞ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è */}
			<div className='p-4'>
				<button
					onClick={handleShare}
					disabled={isSharing}
					className='w-full bg-yellow-400 text-black py-4 rounded-2xl text-lg font-bold disabled:opacity-50 disabled:cursor-not-allowed'
				>
					{isSharing ? '–°–æ–∑–¥–∞—ë–º –∫–∞—Ä—Ç–∏–Ω–∫—É...' : '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è'}
				</button>
			</div>
		</div>
	);
};

export default Results;
